// Go support for Protocol Buffers - Google's data interchange format
//
// Copyright 2015 The Go Authors.  All rights reserved.
// https://github.com/golang/protobuf
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

package WechatProto;

message WechatMsg {

 BaseMsg baseMsg = 1;
 string token = 2;
 string version = 3;
 int32  timeStamp = 4;
 string iP = 5;

}

message BaseMsg {
 int32  ret = 1;
 int32  cmd = 2;
 string cmdUrl = 3;
 string shortHost = 4;
 string longHost = 5;
 User   user = 6;
 bytes longHead=7;
 bytes payloads=8;
 bytes playloadextend=9;

}
message User {
 int64   uin = 1;
 bytes   cookies =2;
 bytes   sessionKey=3;
 string  deviceId=4;
 string  deviceType =5;
 string  deviceName =6;
 bytes   currentsyncKey=7;
 bytes   maxSyncKey=8;
 bytes   autoAuthKey=9;
 string  userame=10;
 bytes   nickname=11;
 bytes userExt=12;

}


service Wechat {
rpc HelloWechat (WechatMsg) returns (WechatMsg) {}
}
